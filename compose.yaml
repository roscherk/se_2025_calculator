version: '3.8'
services:
  backend:
    container-name: backend
    image: backend:1.0.0
    restart: on-failure
    build:
      dockerfile: go.dockerfile
      context: ./backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_net


  db:
    container-name: db
    image: postgres:16.9-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data  
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_net

volumes:
  pgdata:

networks:
  app_net:
    driver: bridge